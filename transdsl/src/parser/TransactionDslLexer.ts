// Generated from grammar/TransactionDsl.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TransactionDslLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly Sync = 19;
	public static readonly OpNot = 20;
	public static readonly Ignore = 21;
	public static readonly Catch = 22;
	public static readonly ID = 23;
	public static readonly WS = 24;
	public static readonly NEWLINE = 25;
	public static readonly COMMENT = 26;
	public static readonly LINE_COMMENT = 27;
	public static readonly NATURAL_NUM = 28;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "Sync", "OpNot", "Ignore", "Catch", "ID", "WS", "NEWLINE", "COMMENT", 
		"LINE_COMMENT", "ID_LETTER", "DIGIT", "NATURAL_NUM",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'transaction'", "'procedure'", "'{'", "'}'", "'if'", "'else'", 
		"'call'", "'while'", "'do'", "'receive'", "'send'", "'delay'", "'after'", 
		"'('", "')'", "'fail'", "','", "'finally'", "'sync'", "'not'", "'ignore'", 
		"'catch'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "Sync", "OpNot", 
		"Ignore", "Catch", "ID", "WS", "NEWLINE", "COMMENT", "LINE_COMMENT", "NATURAL_NUM",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TransactionDslLexer._LITERAL_NAMES, TransactionDslLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TransactionDslLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TransactionDslLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "TransactionDsl.g4"; }

	// @Override
	public get ruleNames(): string[] { return TransactionDslLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TransactionDslLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TransactionDslLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TransactionDslLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1E\xF5\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x03\x02\x03\x02\x03\x02" +
		"\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x07" +
		"\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03" +
		"\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F" +
		"\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x07\x18\xB5\n" +
		"\x18\f\x18\x0E\x18\xB8\v\x18\x03\x19\x06\x19\xBB\n\x19\r\x19\x0E\x19\xBC" +
		"\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x07\x1A\xC4\n\x1A\f\x1A\x0E\x1A" +
		"\xC7\v\x1A\x03\x1A\x03\x1A\x03\x1A\x05\x1A\xCC\n\x1A\x06\x1A\xCE\n\x1A" +
		"\r\x1A\x0E\x1A\xCF\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x07\x1B\xD6\n\x1B\f" +
		"\x1B\x0E\x1B\xD9\v\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1C\x07\x1C\xE4\n\x1C\f\x1C\x0E\x1C\xE7\v\x1C\x03" +
		"\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x07\x1F\xF1" +
		"\n\x1F\f\x1F\x0E\x1F\xF4\v\x1F\x03\xD7\x02\x02 \x03\x02\x03\x05\x02\x04" +
		"\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v" +
		"\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!" +
		"\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x19" +
		"1\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x02;\x02\x02=\x02\x1E\x03\x02" +
		"\x05\x04\x02\v\v\"\"\x04\x02\f\f\x0F\x0F\x05\x02C\\aac|\x02\xFD\x02\x03" +
		"\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t" +
		"\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03" +
		"\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03" +
		"\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03" +
		"\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03" +
		"\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02" +
		"\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02" +
		"/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02" +
		"\x02\x02\x027\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x03?\x03\x02\x02\x02" +
		"\x05K\x03\x02\x02\x02\x07U\x03\x02\x02\x02\tW\x03\x02\x02\x02\vY\x03\x02" +
		"\x02\x02\r\\\x03\x02\x02\x02\x0Fa\x03\x02\x02\x02\x11f\x03\x02\x02\x02" +
		"\x13l\x03\x02\x02\x02\x15o\x03\x02\x02\x02\x17w\x03\x02\x02\x02\x19|\x03" +
		"\x02\x02\x02\x1B\x82\x03\x02\x02\x02\x1D\x88\x03\x02\x02\x02\x1F\x8A\x03" +
		"\x02\x02\x02!\x8C\x03\x02\x02\x02#\x91\x03\x02\x02\x02%\x93\x03\x02\x02" +
		"\x02\'\x9B\x03\x02\x02\x02)\xA0\x03\x02\x02\x02+\xA4\x03\x02\x02\x02-" +
		"\xAB\x03\x02\x02\x02/\xB1\x03\x02\x02\x021\xBA\x03\x02\x02\x023\xCD\x03" +
		"\x02\x02\x025\xD1\x03\x02\x02\x027\xDF\x03\x02\x02\x029\xEA\x03\x02\x02" +
		"\x02;\xEC\x03\x02\x02\x02=\xEE\x03\x02\x02\x02?@\x07v\x02\x02@A\x07t\x02" +
		"\x02AB\x07c\x02\x02BC\x07p\x02\x02CD\x07u\x02\x02DE\x07c\x02\x02EF\x07" +
		"e\x02\x02FG\x07v\x02\x02GH\x07k\x02\x02HI\x07q\x02\x02IJ\x07p\x02\x02" +
		"J\x04\x03\x02\x02\x02KL\x07r\x02\x02LM\x07t\x02\x02MN\x07q\x02\x02NO\x07" +
		"e\x02\x02OP\x07g\x02\x02PQ\x07f\x02\x02QR\x07w\x02\x02RS\x07t\x02\x02" +
		"ST\x07g\x02\x02T\x06\x03\x02\x02\x02UV\x07}\x02\x02V\b\x03\x02\x02\x02" +
		"WX\x07\x7F\x02\x02X\n\x03\x02\x02\x02YZ\x07k\x02\x02Z[\x07h\x02\x02[\f" +
		"\x03\x02\x02\x02\\]\x07g\x02\x02]^\x07n\x02\x02^_\x07u\x02\x02_`\x07g" +
		"\x02\x02`\x0E\x03\x02\x02\x02ab\x07e\x02\x02bc\x07c\x02\x02cd\x07n\x02" +
		"\x02de\x07n\x02\x02e\x10\x03\x02\x02\x02fg\x07y\x02\x02gh\x07j\x02\x02" +
		"hi\x07k\x02\x02ij\x07n\x02\x02jk\x07g\x02\x02k\x12\x03\x02\x02\x02lm\x07" +
		"f\x02\x02mn\x07q\x02\x02n\x14\x03\x02\x02\x02op\x07t\x02\x02pq\x07g\x02" +
		"\x02qr\x07e\x02\x02rs\x07g\x02\x02st\x07k\x02\x02tu\x07x\x02\x02uv\x07" +
		"g\x02\x02v\x16\x03\x02\x02\x02wx\x07u\x02\x02xy\x07g\x02\x02yz\x07p\x02" +
		"\x02z{\x07f\x02\x02{\x18\x03\x02\x02\x02|}\x07f\x02\x02}~\x07g\x02\x02" +
		"~\x7F\x07n\x02\x02\x7F\x80\x07c\x02\x02\x80\x81\x07{\x02\x02\x81\x1A\x03" +
		"\x02\x02\x02\x82\x83\x07c\x02\x02\x83\x84\x07h\x02\x02\x84\x85\x07v\x02" +
		"\x02\x85\x86\x07g\x02\x02\x86\x87\x07t\x02\x02\x87\x1C\x03\x02\x02\x02" +
		"\x88\x89\x07*\x02\x02\x89\x1E\x03\x02\x02\x02\x8A\x8B\x07+\x02\x02\x8B" +
		" \x03\x02\x02\x02\x8C\x8D\x07h\x02\x02\x8D\x8E\x07c\x02\x02\x8E\x8F\x07" +
		"k\x02\x02\x8F\x90\x07n\x02\x02\x90\"\x03\x02\x02\x02\x91\x92\x07.\x02" +
		"\x02\x92$\x03\x02\x02\x02\x93\x94\x07h\x02\x02\x94\x95\x07k\x02\x02\x95" +
		"\x96\x07p\x02\x02\x96\x97\x07c\x02\x02\x97\x98\x07n\x02\x02\x98\x99\x07" +
		"n\x02\x02\x99\x9A\x07{\x02\x02\x9A&\x03\x02\x02\x02\x9B\x9C\x07u\x02\x02" +
		"\x9C\x9D\x07{\x02\x02\x9D\x9E\x07p\x02\x02\x9E\x9F\x07e\x02\x02\x9F(\x03" +
		"\x02\x02\x02\xA0\xA1\x07p\x02\x02\xA1\xA2\x07q\x02\x02\xA2\xA3\x07v\x02" +
		"\x02\xA3*\x03\x02\x02\x02\xA4\xA5\x07k\x02\x02\xA5\xA6\x07i\x02\x02\xA6" +
		"\xA7\x07p\x02\x02\xA7\xA8\x07q\x02\x02\xA8\xA9\x07t\x02\x02\xA9\xAA\x07" +
		"g\x02\x02\xAA,\x03\x02\x02\x02\xAB\xAC\x07e\x02\x02\xAC\xAD\x07c\x02\x02" +
		"\xAD\xAE\x07v\x02\x02\xAE\xAF\x07e\x02\x02\xAF\xB0\x07j\x02\x02\xB0.\x03" +
		"\x02\x02\x02\xB1\xB6\x059\x1D\x02\xB2\xB5\x059\x1D\x02\xB3\xB5\x05;\x1E" +
		"\x02\xB4\xB2\x03\x02\x02\x02\xB4\xB3\x03\x02\x02\x02\xB5\xB8\x03\x02\x02" +
		"\x02\xB6\xB4\x03\x02\x02\x02\xB6\xB7\x03\x02\x02\x02\xB70\x03\x02\x02" +
		"\x02\xB8\xB6\x03\x02\x02\x02\xB9\xBB\t\x02\x02\x02\xBA\xB9\x03\x02\x02" +
		"\x02\xBB\xBC\x03\x02\x02\x02\xBC\xBA\x03\x02\x02\x02\xBC\xBD\x03\x02\x02" +
		"\x02\xBD\xBE\x03\x02\x02\x02\xBE\xBF\b\x19\x02\x02\xBF2\x03\x02\x02\x02" +
		"\xC0\xC4\x051\x19\x02\xC1\xC4\x055\x1B\x02\xC2\xC4\x057\x1C\x02\xC3\xC0" +
		"\x03\x02\x02\x02\xC3\xC1\x03\x02\x02\x02\xC3\xC2\x03\x02\x02\x02\xC4\xC7" +
		"\x03\x02\x02\x02\xC5\xC3\x03\x02\x02\x02\xC5\xC6\x03\x02\x02\x02\xC6\xCB" +
		"\x03\x02\x02\x02\xC7\xC5\x03\x02\x02\x02\xC8\xC9\x07\x0F\x02\x02\xC9\xCC" +
		"\x07\f\x02\x02\xCA\xCC\x07\f\x02\x02\xCB\xC8\x03\x02\x02\x02\xCB\xCA\x03" +
		"\x02\x02\x02\xCC\xCE\x03\x02\x02\x02\xCD\xC5\x03\x02\x02\x02\xCE\xCF\x03" +
		"\x02\x02\x02\xCF\xCD\x03\x02\x02\x02\xCF\xD0\x03\x02\x02\x02\xD04\x03" +
		"\x02\x02\x02\xD1\xD2\x071\x02\x02\xD2\xD3\x07,\x02\x02\xD3\xD7\x03\x02" +
		"\x02\x02\xD4\xD6\v\x02\x02\x02\xD5\xD4\x03\x02\x02\x02\xD6\xD9\x03\x02" +
		"\x02\x02\xD7\xD8\x03\x02\x02\x02\xD7\xD5\x03\x02\x02\x02\xD8\xDA\x03\x02" +
		"\x02\x02\xD9\xD7\x03\x02\x02\x02\xDA\xDB\x07,\x02\x02\xDB\xDC\x071\x02" +
		"\x02\xDC\xDD\x03\x02\x02\x02\xDD\xDE\b\x1B\x02\x02\xDE6\x03\x02\x02\x02" +
		"\xDF\xE0\x071\x02\x02\xE0\xE1\x071\x02\x02\xE1\xE5\x03\x02\x02\x02\xE2" +
		"\xE4\n\x03\x02\x02\xE3\xE2\x03\x02\x02\x02\xE4\xE7\x03\x02\x02\x02\xE5" +
		"\xE3\x03\x02\x02\x02\xE5\xE6\x03\x02\x02\x02\xE6\xE8\x03\x02\x02\x02\xE7" +
		"\xE5\x03\x02\x02\x02\xE8\xE9\b\x1C\x02\x02\xE98\x03\x02\x02\x02\xEA\xEB" +
		"\t\x04\x02\x02\xEB:\x03\x02\x02\x02\xEC\xED\x042;\x02\xED<\x03\x02\x02" +
		"\x02\xEE\xF2\x043;\x02\xEF\xF1\x05;\x1E\x02\xF0\xEF\x03\x02\x02\x02\xF1" +
		"\xF4\x03\x02\x02\x02\xF2\xF0\x03\x02\x02\x02\xF2\xF3\x03\x02\x02\x02\xF3" +
		">\x03\x02\x02\x02\xF4\xF2\x03\x02\x02\x02\r\x02\xB4\xB6\xBC\xC3\xC5\xCB" +
		"\xCF\xD7\xE5\xF2\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TransactionDslLexer.__ATN) {
			TransactionDslLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TransactionDslLexer._serializedATN));
		}

		return TransactionDslLexer.__ATN;
	}

}

